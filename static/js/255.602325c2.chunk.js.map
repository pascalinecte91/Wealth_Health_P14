{"version":3,"file":"static/js/255.602325c2.chunk.js","mappings":"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","sources":["components/datePicker/DatePicker.js","data/states.js","data/departments.js","components/form/Form.js","pages/addEmployee/AddEmployee.jsx","redux/actions.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\"; // Importation des hooks useState, useRef et useEffect de React\r\nimport Calendar from \"react-calendar\"; // Importation du composant Calendar\r\nimport \"react-calendar/dist/Calendar.css\"; // Importation des styles CSS du composant Calendar\r\nimport { FaCalendarAlt as CalendarIcon } from \"react-icons/fa\"; // Importation de l'icône du calendrier depuis les react-icons\r\n\r\n/**\r\n * @Composant fonctionnel React qui affiche un champ de saisie de date avec un calendrier.\r\n * @param {Object} props - Les propriétés passées au composant DatePicker.\r\n * @param {string} props.id - L'identifiant du champ de saisie.\r\n * @param {string} props.content - Le contenu du label.\r\n * @param {string} props.name - Le nom du champ de saisie.\r\n * @param {string} props.date - La date sélectionnée.\r\n * @param {Function} props.handleChange - La fonction à exécuter lors du changement de la date.\r\n * @param {Function} props.handleDateChange - La fonction à exécuter lors de la sélection d'une date dans le calendrier.\r\n */\r\nconst DatePicker = ({\r\n  id,\r\n  content,\r\n  name,\r\n  date,\r\n  handleChange,\r\n  handleDateChange,\r\n  placeholder,\r\n}) => {\r\n  //  gérer la valeur du calendrier\r\n  const [value, setValue] = useState(new Date());\r\n\r\n  // État : si le calendrier est visible ou non\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  // Référence à l'élément du calendrier pour le clic en dehors du composant\r\n  const calendarDate = useRef(null);\r\n\r\n  // affiche le calendrier\r\n  const showCalendar = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  // pour fermer le calendrier et mettre à jour la date sélectionnée\r\n  const closeCalendar = (value) => {\r\n    setValue(value);\r\n    setVisible(false);\r\n    handleDateChange(name, formatDate(value));\r\n  };\r\n\r\n  // formater la date en \"JJ/MM/AAAA\" qui n'est pas dans le component externe\r\n  const formatDate = (date) => {\r\n    const day = String(date.getDate()).padStart(2, \"0\");\r\n    const month = String(date.getMonth() + 1).padStart(2, \"0\");\r\n    const year = date.getFullYear();\r\n    return `${day}/${month}/${year}`;\r\n  };\r\n\r\n  // pour le changement de l'input de la date\r\n  const handleInputChange = (e) => {\r\n    handleChange(e);\r\n  };\r\n\r\n  // la fermeture du calendrier en dehors du composant quad on clic\r\n  useEffect(() => {\r\n    // handleClickOutside va détecter les clics en dehors du calendrier.\r\n    // handleClickOutside  détecte si on a cliqué en dehors du calendrier (calendarDate.current).\r\n    // Si oui, le calendrier est caché  la valeur à false.\r\n    //ferme le calendrier auclique en dehors.\r\n\r\n    const handleClickOutside = (e) => {\r\n      if (calendarDate.current && !calendarDate.current.contains(e.target)) {\r\n        setVisible(false); // calendrier false visible ou pas\r\n        // calendarDate.current.contains(e.target)va si l'élément qu on  a cliqué (e.target)\r\n        // est à l'intérieur  du calendrier (calendarDate.current).\r\n      }\r\n    };\r\n    // j'ajoute un ecouteur d'evenment en utilisant mousedown pour le clic souris\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <label htmlFor={id}>{content}</label>\r\n      <div className=\"input-container\">\r\n        <input\r\n          className=\"input_datepicker\"\r\n          pattern=\"[0-9]{2}/[0-9]{2}/[0-9]{4}\"\r\n          id={id}\r\n          type=\"text\"\r\n          name={name}\r\n          value={date}\r\n          onChange={handleInputChange}\r\n          onClick={showCalendar}\r\n          placeholder={placeholder}\r\n        />\r\n        {/* Affichage du calendrier si visible */}\r\n        {visible && (\r\n          <div ref={calendarDate} className=\"calendar-container\">\r\n            <Calendar\r\n              onChange={closeCalendar}\r\n              value={value}\r\n              className=\"customCalendar\"\r\n              tileClassName=\"customTile\"\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"icon-container\">\r\n          <CalendarIcon className=\"calendar-icon\" onClick={showCalendar} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DatePicker;\r\n","export const states = [\r\n  {\r\n    name: \"Alabama\",\r\n    abbreviation: \"AL\",\r\n  },\r\n  {\r\n    name: \"Alaska\",\r\n    abbreviation: \"AK\",\r\n  },\r\n  {\r\n    name: \"American Samoa\",\r\n    abbreviation: \"AS\",\r\n  },\r\n  {\r\n    name: \"Arizona\",\r\n    abbreviation: \"AZ\",\r\n  },\r\n  {\r\n    name: \"Arkansas\",\r\n    abbreviation: \"AR\",\r\n  },\r\n  {\r\n    name: \"California\",\r\n    abbreviation: \"CA\",\r\n  },\r\n  {\r\n    name: \"Colorado\",\r\n    abbreviation: \"CO\",\r\n  },\r\n  {\r\n    name: \"Connecticut\",\r\n    abbreviation: \"CT\",\r\n  },\r\n  {\r\n    name: \"Delaware\",\r\n    abbreviation: \"DE\",\r\n  },\r\n  {\r\n    name: \"District Of Columbia\",\r\n    abbreviation: \"DC\",\r\n  },\r\n  {\r\n    name: \"Federated States Of Micronesia\",\r\n    abbreviation: \"FM\",\r\n  },\r\n  {\r\n    name: \"Florida\",\r\n    abbreviation: \"FL\",\r\n  },\r\n  {\r\n    name: \"Georgia\",\r\n    abbreviation: \"GA\",\r\n  },\r\n  {\r\n    name: \"Guam\",\r\n    abbreviation: \"GU\",\r\n  },\r\n  {\r\n    name: \"Hawaii\",\r\n    abbreviation: \"HI\",\r\n  },\r\n  {\r\n    name: \"Idaho\",\r\n    abbreviation: \"ID\",\r\n  },\r\n  {\r\n    name: \"Illinois\",\r\n    abbreviation: \"IL\",\r\n  },\r\n  {\r\n    name: \"Indiana\",\r\n    abbreviation: \"IN\",\r\n  },\r\n  {\r\n    name: \"Iowa\",\r\n    abbreviation: \"IA\",\r\n  },\r\n  {\r\n    name: \"Kansas\",\r\n    abbreviation: \"KS\",\r\n  },\r\n  {\r\n    name: \"Kentucky\",\r\n    abbreviation: \"KY\",\r\n  },\r\n  {\r\n    name: \"Louisiana\",\r\n    abbreviation: \"LA\",\r\n  },\r\n  {\r\n    name: \"Maine\",\r\n    abbreviation: \"ME\",\r\n  },\r\n  {\r\n    name: \"Marshall Islands\",\r\n    abbreviation: \"MH\",\r\n  },\r\n  {\r\n    name: \"Maryland\",\r\n    abbreviation: \"MD\",\r\n  },\r\n  {\r\n    name: \"Massachusetts\",\r\n    abbreviation: \"MA\",\r\n  },\r\n  {\r\n    name: \"Michigan\",\r\n    abbreviation: \"MI\",\r\n  },\r\n  {\r\n    name: \"Minnesota\",\r\n    abbreviation: \"MN\",\r\n  },\r\n  {\r\n    name: \"Mississippi\",\r\n    abbreviation: \"MS\",\r\n  },\r\n  {\r\n    name: \"Missouri\",\r\n    abbreviation: \"MO\",\r\n  },\r\n  {\r\n    name: \"Montana\",\r\n    abbreviation: \"MT\",\r\n  },\r\n  {\r\n    name: \"Nebraska\",\r\n    abbreviation: \"NE\",\r\n  },\r\n  {\r\n    name: \"Nevada\",\r\n    abbreviation: \"NV\",\r\n  },\r\n  {\r\n    name: \"New Hampshire\",\r\n    abbreviation: \"NH\",\r\n  },\r\n  {\r\n    name: \"New Jersey\",\r\n    abbreviation: \"NJ\",\r\n  },\r\n  {\r\n    name: \"New Mexico\",\r\n    abbreviation: \"NM\",\r\n  },\r\n  {\r\n    name: \"New York\",\r\n    abbreviation: \"NY\",\r\n  },\r\n  {\r\n    name: \"North Carolina\",\r\n    abbreviation: \"NC\",\r\n  },\r\n  {\r\n    name: \"North Dakota\",\r\n    abbreviation: \"ND\",\r\n  },\r\n  {\r\n    name: \"Northern Mariana Islands\",\r\n    abbreviation: \"MP\",\r\n  },\r\n  {\r\n    name: \"Ohio\",\r\n    abbreviation: \"OH\",\r\n  },\r\n  {\r\n    name: \"Oklahoma\",\r\n    abbreviation: \"OK\",\r\n  },\r\n  {\r\n    name: \"Oregon\",\r\n    abbreviation: \"OR\",\r\n  },\r\n  {\r\n    name: \"Palau\",\r\n    abbreviation: \"PW\",\r\n  },\r\n  {\r\n    name: \"Pennsylvania\",\r\n    abbreviation: \"PA\",\r\n  },\r\n  {\r\n    name: \"Puerto Rico\",\r\n    abbreviation: \"PR\",\r\n  },\r\n  {\r\n    name: \"Rhode Island\",\r\n    abbreviation: \"RI\",\r\n  },\r\n  {\r\n    name: \"South Carolina\",\r\n    abbreviation: \"SC\",\r\n  },\r\n  {\r\n    name: \"South Dakota\",\r\n    abbreviation: \"SD\",\r\n  },\r\n  {\r\n    name: \"Tennessee\",\r\n    abbreviation: \"TN\",\r\n  },\r\n  {\r\n    name: \"Texas\",\r\n    abbreviation: \"TX\",\r\n  },\r\n  {\r\n    name: \"Utah\",\r\n    abbreviation: \"UT\",\r\n  },\r\n  {\r\n    name: \"Vermont\",\r\n    abbreviation: \"VT\",\r\n  },\r\n  {\r\n    name: \"Virgin Islands\",\r\n    abbreviation: \"VI\",\r\n  },\r\n  {\r\n    name: \"Virginia\",\r\n    abbreviation: \"VA\",\r\n  },\r\n  {\r\n    name: \"Washington\",\r\n    abbreviation: \"WA\",\r\n  },\r\n  {\r\n    name: \"West Virginia\",\r\n    abbreviation: \"WV\",\r\n  },\r\n  {\r\n    name: \"Wisconsin\",\r\n    abbreviation: \"WI\",\r\n  },\r\n  {\r\n    name: \"Wyoming\",\r\n    abbreviation: \"WY\",\r\n  },\r\n];\r\n","const departments = [\r\n  {\r\n    id: 1,\r\n    name: \"Sales\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Marketing\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Engineering\",\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"Human Ressources\",\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Legal\",\r\n  },\r\n];\r\n\r\nexport default departments;\r\n","import React, { useState } from \"react\";\r\nimport DatePicker from \"components/datePicker/DatePicker\";\r\nimport { states } from \"data/states.js\";\r\nimport departments from \"data/departments\";\r\nimport { Modal } from \"banby-modal-customize-react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addEmployee } from \"redux/actions.js\";\r\n\r\n/**\r\n * @Composant Form formulaire pour ajouter un employé.\r\n * @returns {JSX.Element}\r\n */\r\nconst Form = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const initialState = {\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    dateOfBirth: \"\",\r\n    startDate: \"\",\r\n    street: \"\",\r\n    city: \"\",\r\n    state: \"\",\r\n    zipCode: \"\",\r\n    department: \"\",\r\n  };\r\n  // État du formulaire contenant les données saisies\r\n  const [formData, setFormData] = useState(initialState);\r\n\r\n  // Réinitialise le formulaire avec les valeurs par défaut.\r\n  const resetForm = () => {\r\n    setFormData(initialState);\r\n  };\r\n  //gérer la modale\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [actionLabel, setActionLabel] = useState(false);\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [modalTitle, setModalTitle] = useState(\"\");\r\n  const [secondModalOpen, setSecondModalOpen] = useState(false);\r\n\r\n  // fonction pour gerer la 1ere modale\r\n  const handleOpenModal = (title) => {\r\n    setModalTitle(title);\r\n    setModalOpen(true);\r\n  };\r\n\r\n  // Ferme la première modal.\r\n  const handleCloseModal = () => {\r\n    setModalOpen(false);\r\n  };\r\n\r\n  /**\r\n   * Gère le changement de valeur d'un champ du formulaire.\r\n   * @param {Object} e - L'événement de changement.\r\n   */\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFirstName(formData.firstName);\r\n    setLastName(formData.lastName);\r\n    setFormData((prevFormData) => ({\r\n      ...prevFormData,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  /**\r\n   * Gère le changement de valeur d'un champ de date dans le formulaire.\r\n   * @param {string} name - Le nom du champ de date à mettre à jour dans formData.\r\n   * @param {string} value - La nouvelle valeur du champ de date.\r\n   */\r\n  const handleDateChange = (name, value) => {\r\n    setFormData((prevFormData) => ({ ...prevFormData, [name]: value }));\r\n    //fn prend en param l'etat precedent et cree un nouvel obj\r\n  };\r\n\r\n  //pour sauvegarder, fermer et appeler la seconde modal\r\n  const handleSave = () => {\r\n    dispatch(addEmployee(formData));\r\n    resetForm();\r\n    handleCloseModal();\r\n\r\n    setModalTitle(\"Employé enregistré\");\r\n    setSecondModalOpen(true);\r\n  };\r\n  // pour annuler le formulaire\r\n  const handleCancel = () => {\r\n    handleFormCancel();\r\n  };\r\n\r\n  // pour soumettre le formulaire\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    handleOpenModal();\r\n    setActionLabel(true);\r\n    console.log(setActionLabel);\r\n  };\r\n\r\n  /**\r\n   * Réinitialise le formulaire et ferme la première modal.\r\n   */\r\n  const handleFormCancel = () => {\r\n    setFormData(initialState);\r\n    setActionLabel(false);\r\n    handleCloseModal();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <section className=\"form\">\r\n        <form onSubmit={handleSubmit} id=\"create_employee\">\r\n          <aside>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"first_name\">First Name</label>\r\n              <input\r\n                required\r\n                type=\"text\"\r\n                id=\"first_name\"\r\n                name=\"firstName\"\r\n                onChange={handleChange}\r\n                value={formData.firstName}\r\n                placeholder=\"Firstname\"\r\n                className=\"input\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"last_name\">Last Name</label>\r\n              <input\r\n                required\r\n                type=\"text\"\r\n                id=\"last_name\"\r\n                name=\"lastName\"\r\n                value={formData.lastName}\r\n                placeholder=\"Lastname\"\r\n                onChange={handleChange}\r\n                className=\"input\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"Date_of_Birth\">Date of Birth</label>\r\n              <DatePicker\r\n                id={\"date_of_birth\"}\r\n                name={\"dateOfBirth\"}\r\n                date={formData.dateOfBirth}\r\n                placeholder=\"Select date of birth\"\r\n                handleChange={handleChange}\r\n                handleDateChange={handleDateChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"start_date\">Start Date</label>\r\n              <DatePicker\r\n                id={\"start_date\"}\r\n                name={\"startDate\"}\r\n                date={formData.startDate}\r\n                placeholder=\"Select start date\"\r\n                handleChange={handleChange}\r\n                handleDateChange={handleDateChange}\r\n              />\r\n            </div>\r\n          </aside>\r\n          <div className=\"form__card\">\r\n            <fieldset className=\"form__address\">\r\n              <legend className=\"form__addressCenter\">Address</legend>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"street\">Street</label>\r\n                <input\r\n                  required\r\n                  id=\"street\"\r\n                  type=\"text\"\r\n                  name=\"street\"\r\n                  value={formData.street}\r\n                  onChange={handleChange}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"city\">City</label>\r\n                <input\r\n                  required\r\n                  id=\"city\"\r\n                  type=\"text\"\r\n                  name=\"city\"\r\n                  value={formData.city}\r\n                  onChange={handleChange}\r\n                  className=\"input_address\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"state\">State</label>\r\n                <select\r\n                  required\r\n                  name=\"state\"\r\n                  id=\"state\"\r\n                  onChange={handleChange}\r\n                  value={formData.state}\r\n                >\r\n                  <option value=\"\">-- Select --</option>\r\n                  {states.map((state) => (\r\n                    <option key={state.abbreviation} value={state.abbreviation}>\r\n                      {state.name}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"zip-code\">Zip Code</label>\r\n                <input\r\n                  required\r\n                  id=\"zip-code\"\r\n                  type=\"number\"\r\n                  name=\"zipCode\"\r\n                  value={formData.zipCode}\r\n                  onChange={handleChange}\r\n                  className=\"input_address\"\r\n                />\r\n              </div>\r\n            </fieldset>\r\n          </div>\r\n\r\n          <label htmlFor=\"department\">Department</label>\r\n          <select\r\n            required\r\n            name=\"department\"\r\n            id=\"department\"\r\n            onChange={handleChange}\r\n            value={formData.department}\r\n            className=\"input\"\r\n          >\r\n            <option value=\"\" className=\"dpt__select\">\r\n              -- Select --\r\n            </option>\r\n\r\n            {departments.map(({ id, name }) => (\r\n              <option key={id} value={name}>\r\n                {name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n\r\n          <br />\r\n          <button type=\"submit\" className=\"form__save\">\r\n            Soumettre\r\n          </button>\r\n        </form>\r\n\r\n        <Modal\r\n          isOpen={modalOpen}\r\n          onClose={handleCloseModal}\r\n          modalClassName=\"my-custom-modal-class\"\r\n          firstName={firstName}\r\n          lastName={lastName}\r\n          onCancel={handleCancel}\r\n          onSave={handleSave}\r\n          showButtons={true}\r\n          actionLabel={actionLabel}\r\n        />\r\n\r\n        <Modal\r\n          isOpen={secondModalOpen}\r\n          onClose={() => setSecondModalOpen(false)}\r\n          modalClassName=\"my-custom-modal-class\"\r\n          modalTitle={modalTitle}\r\n        >\r\n          <h2>{modalTitle}</h2>\r\n        </Modal>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React, { useState } from \"react\";\r\nimport Form from \"components/form/Form.js\";\r\nimport logo from \"assets/logo_sans_fond.png\";\r\nimport mockEmployed from \"data/mockEmployed.js\";\r\n\r\n/**\r\n * @Composant AddEmployee Ajouter un nouvel employé à la liste.\r\n * @returns {JSX.Element}\r\n */\r\nconst AddEmployee = () => {\r\n  const [employed, setEmployed] = useState(mockEmployed);\r\n\r\n  const handleNewEmployee = (employeeData) => {\r\n    setEmployed([...employed, employeeData]);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <section className=\"create\">\r\n        <div className=\"create__wrapperForm\">\r\n          <h1 className=\"create__name\">HRNet</h1>\r\n          <img\r\n            className=\"create__logo\"\r\n            src={logo}\r\n            alt=\"logo Hr-net\"\r\n            width={150}\r\n            height={88}\r\n          />\r\n          <h2 className=\"create__title\">Create Employee</h2>\r\n        </div>\r\n        <Form handleNewEmployee={handleNewEmployee} />\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddEmployee;\r\n","// pour update eventuel\r\n\r\n// export const setEmployee = (employeeData) => ({\r\n//   type: \"SET_EMPLOYEE\",\r\n//   employee: employeeData,\r\n// });\r\n\r\nexport const addEmployee = (employeeData) => ({\r\n  type: \"ADD_EMPLOYEE\",\r\n  payload: employeeData,\r\n});\r\n\r\nexport const clearEmployees = () => ({\r\n  type: \"CLEAR_EMPLOYEES\",\r\n});\r\n"],"names":["_ref","id","content","name","date","handleChange","handleDateChange","placeholder","_useState","useState","Date","_useState2","_slicedToArray","value","setValue","_useState3","_useState4","visible","setVisible","calendarDate","useRef","showCalendar","formatDate","day","String","getDate","padStart","month","getMonth","year","getFullYear","concat","useEffect","handleClickOutside","e","current","contains","target","document","addEventListener","removeEventListener","_jsxs","children","_jsx","htmlFor","className","pattern","type","onChange","onClick","ref","Calendar","tileClassName","CalendarIcon","states","abbreviation","dispatch","useDispatch","initialState","firstName","lastName","dateOfBirth","startDate","street","city","state","zipCode","department","formData","setFormData","modalOpen","setModalOpen","_useState5","_useState6","actionLabel","setActionLabel","_useState7","_useState8","setFirstName","_useState9","_useState10","setLastName","_useState11","_useState12","modalTitle","setModalTitle","_useState13","_useState14","secondModalOpen","setSecondModalOpen","handleCloseModal","_e$target","prevFormData","_objectSpread","_defineProperty","handleFormCancel","_Fragment","onSubmit","title","preventDefault","console","log","required","DatePicker","map","departments","Modal","isOpen","onClose","modalClassName","onCancel","onSave","addEmployee","showButtons","mockEmployed","employed","setEmployed","src","logo","alt","width","height","Form","handleNewEmployee","employeeData","_toConsumableArray","payload","clearEmployees"],"sourceRoot":""}